# EXPECT-WELL-FORMED
# EXPECT-MAX-STACK-DELTA-SIZE 1
# EXPECT-ANALYSIS-LOOKUP-FROM-END r {false, true}
# EXPECT-ANALYSIS-NO-INCONSISTENCIES

# Reference: https://bitbucket.org/ucombinator/p4f-prototype/src/8f1c1c20ed02945d2855e25abef3b445d80a77eb/benchmarks/gcfa2/kcfa2.scm?at=master&fileviewer=file-view-default
#
# ((lambda (f1)
#    (let ((a (f1 #t)))
#      (f1 #f)))
#  (lambda (x1) ((lambda (f2)
#                  (let ((b (f2 #t)))
#                    (let ((c (f2 #f)))
#                      (f2 #t))))
#                (lambda (x2) ((lambda (z) (z x1 x2)) (lambda (y1 y2) y1)))))) ; => #f

tru = true;
fals = false;

ff1 = fun f1 -> (
  a = f1 tru;
  ff1r = f1 fals;
);

fx1 = fun x1 -> (
  ff2 = fun f2 -> (
    b = f2 tru;
    c = f2 fals;
    ff2r = f2 tru;
  );

  fx2 = fun x2 -> (
    fz = fun z -> (
      zparams = {y1 = x1, y2 = x2};
      fzr = z zparams;
    );

    fy1 = fun fy1params -> (
      y1 = fy1params.y1;
      y2 = fy1params.y2;
      fy2r = y1;
    );

    fx2r = fz fy1;
  );

  fx1r = ff2 fx2;
);

r = ff1 fx1; # => false
