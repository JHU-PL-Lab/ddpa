# EXPECT-WELL-FORMED
# EXPECT-MAX-STACK-DELTA-SIZE 1
# EXPECT-ANALYSIS-LOOKUP-FROM-END r {int}
# EXPECT-ANALYSIS-NO-INCONSISTENCIES

# Reference: https://bitbucket.org/ucombinator/p4f-prototype/src/8f1c1c20ed02945d2855e25abef3b445d80a77eb/benchmarks/larceny/cpstak.sch?at=master&fileviewer=file-view-default
#
# (define (cpstak x y z)
#
#   (define (tak x y z k)
#     (if (not (< y x))
#         (k z)
#         (tak (- x 1)
#              y
#              z
#              (lambda (v1)
#                (tak (- y 1)
#                     z
#                     x
#                     (lambda (v2)
#                       (tak (- z 1)
#                            x
#                            y
#                            (lambda (v3)
#                              (tak v1 v2 v3 k)))))))))
#
#   (tak x y z (lambda (a) a)))
#
# (cpstak 32 15 8) ; => 15

one = 1;
thirtytwo = 32;
fifteen = 15;
eight = 8;

cpstak = fun cpstakparams -> (
  cpstakx = cpstakparams.x;
  cpstaky = cpstakparams.y;
  cpstakz = cpstakparams.z;

  tak = fun takprparams -> (
    x = takprparams.x;
    y = takprparams.y;
    z = takprparams.z;
    k = takprparams.k;

    yx = y < x;

    notyx = not yx;

    kr = notyx ~ true
               ? fun notyxm -> (
                 notyxmr = k z;
               )
               : fun notyxa -> (
                 x1 = x - one;
                 takatfv1 = tak;
                 fv1 = fun v1 -> (
                   takatfv2 = takatfv1;
                   y1 = y - one;
                   fv2 = fun v2 -> (
                     takatfv3 = takatfv2;
                     z1 = z - one;
                     fv3 = fun v3 -> (
                       takfinalparams = {x = v1, y = v2, z = v3, k = k};
                       fv3r = takatfv3 takfinalparams;
                     );
                     takzparams = {x = z1, y = x, z = y, k = fv3};
                     fv2r = takatfv2 takzparams;
                   );
                   takyparams = {x = y1, y = z, z = x, k = fv2};
                   fv1r = takatfv1 takyparams;
                 );
                 takxparams = {x = x1, y = y, z = z, k = fv1};
                 notyxar = tak takxparams;
               );
  );
  
  takid = fun a -> (
    takidr = a;
  );

  takparams = {x = cpstakx, y = cpstaky, z = cpstakz, k = takid};
  cpstakr = tak takparams;
);

cpstakparamsxyz = {x = thirtytwo, y = fifteen, z = eight};
r = cpstak cpstakparamsxyz; # => 15
