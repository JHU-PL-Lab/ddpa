# EXPECT-WELL-FORMED
# EXPECT-ANALYSIS-STACK-IS 0ddpa
# EXPECT-ANALYSIS-LOOKUP-FROM-END ~result {int}

let y =
let x = `A(`B(`C ([2]))) in
match x with
| `A x ->
(match x with
  | `B x ->
  (match x with
    | `C x -> x
   end
  )
  end
)
end
in
match y with
| hd :: [] -> hd
end
